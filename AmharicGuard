<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AmharicGuard - Rilevatore Deepfake</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #0a0e1a;
            background-image: radial-gradient(circle at top right, rgba(14, 165, 233, 0.15), transparent 40%),
                              radial-gradient(circle at bottom left, rgba(45, 212, 191, 0.15), transparent 40%);
        }
        .truth-o-meter-dial {
            transition: transform 1.5s cubic-bezier(0.68, -0.55, 0.27, 1.55);
        }
        .meter-gradient {
            background-image: conic-gradient(from 0.75turn at 50% 100%, #ef4444, #eab308, #22c55e);
        }
        .animated-fade-in {
            animation: fadeIn 0.5s ease-in-out forwards;
        }
        .animated-fade-in-up {
            opacity: 0;
            animation: fadeInUp 0.6s ease-out forwards;
        }
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>
<body class="text-white flex items-center justify-center min-h-screen p-4">

    <div id="app" class="w-full max-w-3xl mx-auto">
        
        <!-- Schermata di Upload -->
        <div id="upload-screen" class="bg-gray-800/50 backdrop-blur-xl p-8 rounded-2xl shadow-2xl border border-gray-700 transition-all duration-500">
            <div class="text-center mb-6">
                <h1 class="text-4xl font-bold text-cyan-400">AmharicGuard</h1>
                <p class="text-gray-400 mt-2">Rilevatore di Deepfake per Lingue a Bassa Risorsa</p>
            </div>

            <div id="drop-zone" class="border-2 border-dashed border-gray-600 rounded-xl p-10 text-center cursor-pointer hover:border-cyan-400 hover:bg-gray-700/20 transition-all duration-300">
                <input type="file" id="file-input" class="hidden" accept="audio/*,video/*">
                <div id="upload-prompt" class="flex flex-col items-center">
                    <svg class="w-16 h-16 text-gray-500 mb-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 16.5V9.75m0 0l-3 3m3-3l3 3M6.75 19.5a4.5 4.5 0 01-1.41-8.775 5.25 5.25 0 0110.233-2.33 3 3 0 013.758 3.848A3.752 3.752 0 0118 19.5H6.75z" />
                    </svg>
                    <p class="text-gray-400">Trascina e rilascia un file audio/video qui</p>
                    <p class="text-sm text-gray-500">o</p>
                    <button id="browse-btn" class="mt-2 text-cyan-400 font-semibold hover:text-cyan-300 transition">Seleziona un file</button>
                </div>
                <div id="file-preview" class="hidden flex-col items-center text-green-400">
                     <svg class="w-16 h-16 mb-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75l3 3m0 0l3-3m-3 3v-7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    <p id="file-name" class="font-semibold"></p>
                    <p class="text-sm text-gray-400">File pronto per l'analisi</p>
                </div>
            </div>

            <div class="mt-6 text-center">
                 <button id="analyze-btn" class="w-full bg-cyan-600 text-white font-bold py-3 px-6 rounded-lg hover:bg-cyan-500 disabled:bg-gray-600/50 disabled:cursor-not-allowed transition-all shadow-lg shadow-cyan-800/30 disabled:shadow-none transform hover:scale-105 disabled:transform-none">
                    Analizza File
                </button>
            </div>
        </div>

        <!-- Schermata di Analisi e Risultati -->
        <div id="results-screen" class="hidden">
            <div class="text-center mb-8 animated-fade-in">
                 <h1 class="text-4xl font-bold text-cyan-400">AmharicGuard</h1>
                 <p class="text-gray-400 mt-2">Risultati dell'Analisi</p>
            </div>

            <!-- Loader -->
            <div id="loader" class="text-center p-8">
                <svg class="animate-spin h-12 w-12 text-cyan-400 mx-auto" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                <p class="mt-4 text-gray-300">Analisi in corso... Questo potrebbe richiedere alcuni istanti.</p>
            </div>

            <!-- Contenuto dei Risultati -->
            <div id="results-content" class="hidden space-y-6">
                
                <div class="grid md:grid-cols-2 gap-6">
                    <!-- Truth-o-Meter -->
                    <div class="bg-gray-800/50 backdrop-blur-xl p-6 rounded-2xl border border-gray-700 animated-fade-in-up" style="animation-delay: 100ms;">
                        <h2 class="text-xl font-semibold text-center mb-4">Punteggio di Autenticit√†</h2>
                        <div class="relative w-56 h-28 mx-auto mb-2">
                            <div class="absolute top-0 left-0 w-full h-full meter-gradient rounded-t-full" style="clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%); mask: radial-gradient(farthest-side at 50% 100%, transparent 65%, white 66%); -webkit-mask: radial-gradient(farthest-side at 50% 100%, transparent 65%, white 66%);"></div>
                            <div id="meter-dial" class="truth-o-meter-dial absolute bottom-0 left-1/2 w-1 h-24 bg-white/90 rounded-full origin-bottom" style="transform: translateX(-50%) rotate(-90deg);"></div>
                            <div class="absolute bottom-0 left-1/2 transform -translate-x-1/2 translate-y-1 w-4 h-4 bg-gray-800 border-2 border-white rounded-full"></div>
                        </div>
                        <div id="score-text" class="text-center text-5xl font-bold mt-4">0%</div>
                        <div class="flex justify-between text-xs text-gray-400 mt-2 px-4">
                            <span>Falso</span>
                            <span>Autentico</span>
                        </div>
                    </div>
                    
                    <!-- Analisi Semantica -->
                    <div class="bg-gray-800/50 backdrop-blur-xl p-6 rounded-2xl border border-gray-700 animated-fade-in-up" style="animation-delay: 200ms;">
                        <h2 class="text-xl font-semibold text-center mb-4">Impronta Semantica</h2>
                        <div id="semantic-analysis" class="space-y-3 text-gray-300">
                           <!-- I risultati dell'analisi verranno inseriti qui da JS -->
                        </div>
                    </div>
                </div>

                <!-- Verdetto -->
                 <div id="verdict-box" class="p-4 rounded-lg text-center font-bold text-lg animated-fade-in-up" style="animation-delay: 300ms;">
                    <span id="verdict-text"></span>
                </div>

                <!-- Trascrizione e Traduzione -->
                <div class="grid md:grid-cols-2 gap-6">
                    <div class="bg-gray-800/50 backdrop-blur-xl p-6 rounded-2xl border border-gray-700 animated-fade-in-up" style="animation-delay: 400ms;">
                        <h3 class="font-semibold text-lg mb-2 text-cyan-400">Trascrizione (Amarico)</h3>
                        <p id="transcription-text" class="text-gray-300 font-mono text-sm h-24 overflow-y-auto bg-gray-900/50 p-3 rounded-md"></p>
                    </div>
                    <div class="bg-gray-800/50 backdrop-blur-xl p-6 rounded-2xl border border-gray-700 animated-fade-in-up" style="animation-delay: 500ms;">
                        <h3 class="font-semibold text-lg mb-2 text-cyan-400">Traduzione (Inglese)</h3>
                        <p id="translation-text" class="text-gray-300 font-mono text-sm h-24 overflow-y-auto bg-gray-900/50 p-3 rounded-md"></p>
                    </div>
                </div>

                <div class="text-center pt-4 animated-fade-in-up" style="animation-delay: 600ms;">
                    <button id="reset-btn" class="bg-gray-600 text-white font-bold py-3 px-6 rounded-lg hover:bg-gray-500 transition-all transform hover:scale-105">
                        Analizza un altro file
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // --- Elementi DOM ---
        const uploadScreen = document.getElementById('upload-screen');
        const resultsScreen = document.getElementById('results-screen');
        const dropZone = document.getElementById('drop-zone');
        const fileInput = document.getElementById('file-input');
        const browseBtn = document.getElementById('browse-btn');
        const analyzeBtn = document.getElementById('analyze-btn');
        const uploadPrompt = document.getElementById('upload-prompt');
        const filePreview = document.getElementById('file-preview');
        const fileName = document.getElementById('file-name');
        
        const loader = document.getElementById('loader');
        const resultsContent = document.getElementById('results-content');
        
        const meterDial = document.getElementById('meter-dial');
        const scoreText = document.getElementById('score-text');
        const verdictBox = document.getElementById('verdict-box');
        const verdictText = document.getElementById('verdict-text');
        const semanticAnalysisContainer = document.getElementById('semantic-analysis');
        const transcriptionText = document.getElementById('transcription-text');
        const translationText = document.getElementById('translation-text');
        const resetBtn = document.getElementById('reset-btn');

        let selectedFile = null;

        // --- Gestione Eventi Upload ---
        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropZone.classList.add('border-cyan-400', 'bg-gray-700/20');
        });
        dropZone.addEventListener('dragleave', () => {
            dropZone.classList.remove('border-cyan-400', 'bg-gray-700/20');
        });
        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropZone.classList.remove('border-cyan-400', 'bg-gray-700/20');
            if (e.dataTransfer.files.length > 0) handleFile(e.dataTransfer.files[0]);
        });
        dropZone.addEventListener('click', () => fileInput.click());
        fileInput.addEventListener('change', (e) => {
            if (e.target.files.length > 0) handleFile(e.target.files[0]);
        });

        function handleFile(file) {
            selectedFile = file;
            fileName.textContent = file.name.length > 30 ? `${file.name.substring(0, 27)}...` : file.name;
            uploadPrompt.classList.add('hidden');
            filePreview.classList.remove('hidden');
            filePreview.classList.add('flex');
            analyzeBtn.disabled = false;
        }

        // --- Logica di Analisi ---
        analyzeBtn.addEventListener('click', () => {
            if (!selectedFile) return;
            uploadScreen.classList.add('opacity-0');
            setTimeout(() => {
                uploadScreen.classList.add('hidden');
                resultsScreen.classList.remove('hidden');
                resultsScreen.classList.add('animated-fade-in');
                startAnalysis();
            }, 500);
        });
        
        function startAnalysis() {
            loader.classList.remove('hidden');
            resultsContent.classList.add('hidden');
            const analysisTime = Math.random() * 2000 + 3000;
            setTimeout(() => {
                loader.classList.add('hidden');
                showResults();
            }, analysisTime);
        }

        function showResults() {
            resultsContent.classList.remove('hidden');
            const confidenceScore = Math.random();
            const scorePercentage = Math.round(confidenceScore * 100);
            
            updateMeter(scorePercentage);
            updateVerdict(scorePercentage);
            updateSemanticAnalysis(confidenceScore);
            updateTextContent();
        }

        function updateMeter(score) {
            const rotation = (score * 1.8) - 90;
            meterDial.style.transform = `translateX(-50%) rotate(${rotation}deg)`;
            
            let currentScore = 0;
            const interval = setInterval(() => {
                currentScore++;
                if (currentScore >= score) {
                    clearInterval(interval);
                    currentScore = score;
                }
                scoreText.textContent = `${currentScore}%`;
            }, 20);

            // Colore del testo del punteggio
            if (score < 40) scoreText.style.color = '#ef4444'; // red-500
            else if (score < 60) scoreText.style.color = '#eab308'; // yellow-500
            else scoreText.style.color = '#22c55e'; // green-500
        }

        function updateVerdict(score) {
            if (score >= 60) {
                verdictBox.className = 'p-4 rounded-lg text-center font-bold text-lg bg-green-500/20 text-green-400 animated-fade-in-up';
                verdictText.textContent = 'Contenuto Ritenuto Autentico';
            } else if (score >= 40) {
                verdictBox.className = 'p-4 rounded-lg text-center font-bold text-lg bg-yellow-500/20 text-yellow-400 animated-fade-in-up';
                verdictText.textContent = 'Potenziali Incongruenze Rilevate';
            } else {
                verdictBox.className = 'p-4 rounded-lg text-center font-bold text-lg bg-red-500/20 text-red-400 animated-fade-in-up';
                verdictText.textContent = 'Alta Probabilit√† di Manipolazione';
            }
        }

        function updateSemanticAnalysis(score) {
            semanticAnalysisContainer.innerHTML = ''; // Pulisci i risultati precedenti
            const checks = [
                { name: "Coerenza Culturale", threshold: 0.3 },
                { name: "Fluidit√† Linguistica", threshold: 0.5 },
                { name: "Struttura Frasale", threshold: 0.6 },
                { name: "Accuratezza Contestuale", threshold: 0.75 }
            ];
            
            checks.forEach(check => {
                const passed = score >= check.threshold;
                const icon = passed 
                    ? `<svg class="w-5 h-5 text-green-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>`
                    : `<svg class="w-5 h-5 text-red-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>`;
                
                const element = document.createElement('div');
                element.className = 'flex items-center justify-between text-sm';
                element.innerHTML = `<span>${check.name}</span><div class="flex items-center gap-2">${icon}<span>${passed ? 'Superato' : 'Fallito'}</span></div>`;
                semanticAnalysisContainer.appendChild(element);
            });
        }

        function updateTextContent() {
            const fakeAmharicTranscriptions = [
                "·à∞·àã·àù! ·ã≠·àÖ ·ã®·àô·ä®·à´ ·àò·àç·ä•·ä≠·âµ ·äê·ãç·ç¢ ·àµ·à≠·ãì·â± ·â†·âµ·ä≠·ä≠·àç ·ä•·ã®·à∞·à´ ·àò·àÜ·äë·äï ·àà·àõ·à®·åã·åà·å• ·äê·ãç·ç¢",
                "·ã≠·àÖ·äï·äï ·â¥·ä≠·äñ·àé·åÇ ·â†·àò·å†·âÄ·àù ·ã®·àê·à∞·âµ ·ãú·äì·ãé·âΩ·äï ·ä•·äì ·ã®·â∞·à≥·à≥·â± ·àò·à®·åÉ·ãé·âΩ·äï ·àò·ãã·åã·âµ ·ä•·äï·âΩ·àã·àà·äï·ç¢",
                "·ã®·ä†·àõ·à≠·äõ ·âã·äï·âã ·ãç·àµ·â•·àµ·â• ·â¢·àÜ·äï·àù·ç£ ·ã®·ä•·äõ ·àû·ã¥·àç ·ä®·çç·â∞·äõ ·âµ·ä≠·ä≠·àà·äõ·äê·âµ·äï ·ã´·à≥·ã´·àç·ç¢"
            ];
            const fakeEnglishTranslations = [
                "Hello! This is a test message to verify the system is working correctly.",
                "Using this technology, we can combat fake news and misinformation.",
                "Although the Amharic language is complex, our model demonstrates high accuracy."
            ];
            const randomIndex = Math.floor(Math.random() * fakeAmharicTranscriptions.length);
            transcriptionText.textContent = fakeAmharicTranscriptions[randomIndex];
            translationText.textContent = fakeEnglishTranslations[randomIndex];
        }

        // --- Reset ---
        resetBtn.addEventListener('click', () => {
            selectedFile = null;
            resultsScreen.classList.add('opacity-0');
            setTimeout(() => {
                resultsScreen.classList.add('hidden');
                uploadScreen.classList.remove('hidden');
                uploadScreen.classList.remove('opacity-0');
                
                // Resetta lo stato dell'upload
                filePreview.classList.add('hidden');
                filePreview.classList.remove('flex');
                uploadPrompt.classList.remove('hidden');
                analyzeBtn.disabled = true;
                fileInput.value = '';
            }, 500);
        });
    </script>
</body>
</html>
